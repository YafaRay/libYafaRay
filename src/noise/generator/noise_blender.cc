/****************************************************************************
 *      This is part of the libYafaRay package
 *
 *      This library is free software; you can redistribute it and/or
 *      modify it under the terms of the GNU Lesser General Public
 *      License as published by the Free Software Foundation; either
 *      version 2.1 of the License, or (at your option) any later version.
 *
 *      This library is distributed in the hope that it will be useful,
 *      but WITHOUT ANY WARRANTY; without even the implied warranty of
 *      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *      Lesser General Public License for more details.
 *
 *      You should have received a copy of the GNU Lesser General Public
 *      License along with this library; if not, write to the Free Software
 *      Foundation,Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#include "noise/generator/noise_blender.h"

namespace yafaray {

//------------------------------------------------------------------------------------
// Blender noise, similar to 'standard' perlin

float BlenderNoiseGenerator::operator()(const Point3f &pt) const
{
	const float x = pt[Axis::X], y = pt[Axis::Y], z = pt[Axis::Z];
	const int ix = static_cast<int>(std::floor(x));
	const int iy = static_cast<int>(std::floor(y));
	const int iz = static_cast<int>(std::floor(z));
	const float ox = x - ix;
	const float oy = y - iy;
	const float oz = z - iz;
	const float jx = ox - 1.f;
	const float jy = oy - 1.f;
	const float jz = oz - 1.f;
	float cn_1 = ox * ox;
	float cn_2 = oy * oy;
	float cn_3 = oz * oz;
	float cn_4 = jx * jx;
	float cn_5 = jy * jy;
	float cn_6 = jz * jz;
	cn_1 = 1.f - 3.f * cn_1 + 2.f * cn_1 * ox;
	cn_2 = 1.f - 3.f * cn_2 + 2.f * cn_2 * oy;
	cn_3 = 1.f - 3.f * cn_3 + 2.f * cn_3 * oz;
	cn_4 = 1.f - 3.f * cn_4 - 2.f * cn_4 * jx;
	cn_5 = 1.f - 3.f * cn_5 - 2.f * cn_5 * jy;
	cn_6 = 1.f - 3.f * cn_6 - 2.f * cn_6 * jz;

	const int b_00 = hash_[hash_[ix & 255] + (iy & 255)];
	const int b_10 = hash_[hash_[(ix + 1) & 255] + (iy & 255)];
	const int b_01 = hash_[hash_[ix & 255] + ((iy + 1) & 255)];
	const int b_11 = hash_[hash_[(ix + 1) & 255] + ((iy + 1) & 255)];
	const int b_20 = iz & 255;
	const int b_21 = (iz + 1) & 255;

	/* 0 */
	float i = (cn_1 * cn_2 * cn_3);
	const float *h = hashvectf_ + 3 * hash_[b_20 + b_00];
	float n = 0.5f;
	n += i * (h[0] * ox + h[1] * oy + h[2] * oz);
	/* 1 */
	i = (cn_1 * cn_2 * cn_6);
	h = hashvectf_ + 3 * hash_[b_21 + b_00];
	n += i * (h[0] * ox + h[1] * oy + h[2] * jz);
	/* 2 */
	i = (cn_1 * cn_5 * cn_3);
	h = hashvectf_ + 3 * hash_[b_20 + b_01];
	n += i * (h[0] * ox + h[1] * jy + h[2] * oz);
	/* 3 */
	i = (cn_1 * cn_5 * cn_6);
	h = hashvectf_ + 3 * hash_[b_21 + b_01];
	n += i * (h[0] * ox + h[1] * jy + h[2] * jz);
	/* 4 */
	i = cn_4 * cn_2 * cn_3;
	h = hashvectf_ + 3 * hash_[b_20 + b_10];
	n += i * (h[0] * jx + h[1] * oy + h[2] * oz);
	/* 5 */
	i = cn_4 * cn_2 * cn_6;
	h = hashvectf_ + 3 * hash_[b_21 + b_10];
	n += i * (h[0] * jx + h[1] * oy + h[2] * jz);
	/* 6 */
	i = cn_4 * cn_5 * cn_3;
	h = hashvectf_ + 3 * hash_[b_20 + b_11];
	n +=  i * (h[0] * jx + h[1] * jy + h[2] * oz);
	/* 7 */
	i = (cn_4 * cn_5 * cn_6);
	h = hashvectf_ + 3 * hash_[b_21 + b_11];
	n += i * (h[0] * jx + h[1] * jy + h[2] * jz);

	if(n < 0.f) n = 0.f; else if(n > 1.f) n = 1.f;
	return n;
}

const float BlenderNoiseGenerator::hashvectf_[768]
{
	0.33783f, 0.715698f, -0.611206f, -0.944031f, -0.326599f, -0.045624f, -0.101074f, -0.416443f, -0.903503f, 0.799286f, 0.49411f, -0.341949f, -0.854645f, 0.518036f, 0.033936f, 0.42514f, -0.437866f, -0.792114f, -0.358948f, 0.597046f, 0.717377f, -0.985413f, 0.144714f, 0.089294f, -0.601776f, -0.33728f, -0.723907f, -0.449921f, 0.594513f, 0.666382f, 0.208313f, -0.10791f,
	0.972076f, 0.575317f, 0.060425f, 0.815643f, 0.293365f, -0.875702f, -0.383453f, 0.293762f, 0.465759f, 0.834686f, -0.846008f, -0.233398f, -0.47934f, -0.115814f, 0.143036f, -0.98291f, 0.204681f, -0.949036f, -0.239532f, 0.946716f, -0.263947f, 0.184326f, -0.235596f, 0.573822f, 0.784332f, 0.203705f, -0.372253f, -0.905487f, 0.756989f, -0.651031f, 0.055298f, 0.497803f,
	0.814697f, -0.297363f, -0.16214f, 0.063995f, -0.98468f, -0.329254f, 0.834381f, 0.441925f, 0.703827f, -0.527039f, -0.476227f, 0.956421f, 0.266113f, 0.119781f, 0.480133f, 0.482849f, 0.7323f, -0.18631f, 0.961212f, -0.203125f, -0.748474f, -0.656921f, -0.090393f, -0.085052f, -0.165253f, 0.982544f, -0.76947f, 0.628174f, -0.115234f, 0.383148f, 0.537659f, 0.751068f,
	0.616486f, -0.668488f, -0.415924f, -0.259979f, -0.630005f, 0.73175f, 0.570953f, -0.087952f, 0.816223f, -0.458008f, 0.023254f, 0.888611f, -0.196167f, 0.976563f, -0.088287f, -0.263885f, -0.69812f, -0.665527f, 0.437134f, -0.892273f, -0.112793f, -0.621674f, -0.230438f, 0.748566f, 0.232422f, 0.900574f, -0.367249f, 0.22229f, -0.796143f, 0.562744f, -0.665497f, -0.73764f,
	0.11377f, 0.670135f, 0.704803f, 0.232605f, 0.895599f, 0.429749f, -0.114655f, -0.11557f, -0.474243f, 0.872742f, 0.621826f, 0.604004f, -0.498444f, -0.832214f, 0.012756f, 0.55426f, -0.702484f, 0.705994f, -0.089661f, -0.692017f, 0.649292f, 0.315399f, -0.175995f, -0.977997f, 0.111877f, 0.096954f, -0.04953f, 0.994019f, 0.635284f, -0.606689f, -0.477783f, -0.261261f,
	-0.607422f, -0.750153f, 0.983276f, 0.165436f, 0.075958f, -0.29837f, 0.404083f, -0.864655f, -0.638672f, 0.507721f, 0.578156f, 0.388214f, 0.412079f, 0.824249f, 0.556183f, -0.208832f, 0.804352f, 0.778442f, 0.562012f, 0.27951f, -0.616577f, 0.781921f, -0.091522f, 0.196289f, 0.051056f, 0.979187f, -0.121216f, 0.207153f, -0.970734f, -0.173401f, -0.384735f, 0.906555f,
	0.161499f, -0.723236f, -0.671387f, 0.178497f, -0.006226f, -0.983887f, -0.126038f, 0.15799f, 0.97934f, 0.830475f, -0.024811f, 0.556458f, -0.510132f, -0.76944f, 0.384247f, 0.81424f, 0.200104f, -0.544891f, -0.112549f, -0.393311f, -0.912445f, 0.56189f, 0.152222f, -0.813049f, 0.198914f, -0.254517f, -0.946381f, -0.41217f, 0.690979f, -0.593811f, -0.407257f, 0.324524f,
	0.853668f, -0.690186f, 0.366119f, -0.624115f, -0.428345f, 0.844147f, -0.322296f, -0.21228f, -0.297546f, -0.930756f, -0.273071f, 0.516113f, 0.811798f, 0.928314f, 0.371643f, 0.007233f, 0.785828f, -0.479218f, -0.390778f, -0.704895f, 0.058929f, 0.706818f, 0.173248f, 0.203583f, 0.963562f, 0.422211f, -0.904297f, -0.062469f, -0.363312f, -0.182465f, 0.913605f, 0.254028f,
	-0.552307f, -0.793945f, -0.28891f, -0.765747f, -0.574554f, 0.058319f, 0.291382f, 0.954803f, 0.946136f, -0.303925f, 0.111267f, -0.078156f, 0.443695f, -0.892731f, 0.182098f, 0.89389f, 0.409515f, -0.680298f, -0.213318f, 0.701141f, 0.062469f, 0.848389f, -0.525635f, -0.72879f, -0.641846f, 0.238342f, -0.88089f, 0.427673f, 0.202637f, -0.532501f, -0.21405f, 0.818878f,
	0.948975f, -0.305084f, 0.07962f, 0.925446f, 0.374664f, 0.055817f, 0.820923f, 0.565491f, 0.079102f, 0.25882f, 0.099792f, -0.960724f, -0.294617f, 0.910522f, 0.289978f, 0.137115f, 0.320038f, -0.937408f, -0.908386f, 0.345276f, -0.235718f, -0.936218f, 0.138763f, 0.322754f, 0.366577f, 0.925934f, -0.090637f, 0.309296f, -0.686829f, -0.657684f, 0.66983f, 0.024445f,
	0.742065f, -0.917999f, -0.059113f, -0.392059f, 0.365509f, 0.462158f, -0.807922f, 0.083374f, 0.996399f, -0.014801f, 0.593842f, 0.253143f, -0.763672f, 0.974976f, -0.165466f, 0.148285f, 0.918976f, 0.137299f, 0.369537f, 0.294952f, 0.694977f, 0.655731f, 0.943085f, 0.152618f, -0.295319f, 0.58783f, -0.598236f, 0.544495f, 0.203796f, 0.678223f, 0.705994f, -0.478821f,
	-0.661011f, 0.577667f, 0.719055f, -0.1698f, -0.673828f, -0.132172f, -0.965332f, 0.225006f, -0.981873f, -0.14502f, 0.121979f, 0.763458f, 0.579742f, 0.284546f, -0.893188f, 0.079681f, 0.442474f, -0.795776f, -0.523804f, 0.303802f, 0.734955f, 0.67804f, -0.007446f, 0.15506f, 0.986267f, -0.056183f, 0.258026f, 0.571503f, -0.778931f, -0.681549f, -0.702087f, -0.206116f,
	-0.96286f, -0.177185f, 0.203613f, -0.470978f, -0.515106f, 0.716095f, -0.740326f, 0.57135f, 0.354095f, -0.56012f, -0.824982f, -0.074982f, -0.507874f, 0.753204f, 0.417969f, -0.503113f, 0.038147f, 0.863342f, 0.594025f, 0.673553f, -0.439758f, -0.119873f, -0.005524f, -0.992737f, 0.098267f, -0.213776f, 0.971893f, -0.615631f, 0.643951f, 0.454163f, 0.896851f, -0.441071f,
	0.032166f, -0.555023f, 0.750763f, -0.358093f, 0.398773f, 0.304688f, 0.864929f, -0.722961f, 0.303589f, 0.620544f, -0.63559f, -0.621948f, -0.457306f, -0.293243f, 0.072327f, 0.953278f, -0.491638f, 0.661041f, -0.566772f, -0.304199f, -0.572083f, -0.761688f, 0.908081f, -0.398956f, 0.127014f, -0.523621f, -0.549683f, -0.650848f, -0.932922f, -0.19986f, 0.299408f, 0.099426f,
	0.140869f, 0.984985f, -0.020325f, -0.999756f, -0.002319f, 0.952667f, 0.280853f, -0.11615f, -0.971893f, 0.082581f, 0.220337f, 0.65921f, 0.705292f, -0.260651f, 0.733063f, -0.175537f, 0.657043f, -0.555206f, 0.429504f, -0.712189f, 0.400421f, -0.89859f, 0.179352f, 0.750885f, -0.19696f, 0.630341f, 0.785675f, -0.569336f, 0.241821f, -0.058899f, -0.464111f, 0.883789f,
	0.129608f, -0.94519f, 0.299622f, -0.357819f, 0.907654f, 0.219238f, -0.842133f, -0.439117f, -0.312927f, -0.313477f, 0.84433f, 0.434479f, -0.241211f, 0.053253f, 0.968994f, 0.063873f, 0.823273f, 0.563965f, 0.476288f, 0.862152f, -0.172516f, 0.620941f, -0.298126f, 0.724915f, 0.25238f, -0.749359f, -0.612122f, -0.577545f, 0.386566f, 0.718994f, -0.406342f, -0.737976f,
	0.538696f, 0.04718f, 0.556305f, 0.82959f, -0.802856f, 0.587463f, 0.101166f, -0.707733f, -0.705963f, 0.026428f, 0.374908f, 0.68457f, 0.625092f, 0.472137f, 0.208405f, -0.856506f, -0.703064f, -0.581085f, -0.409821f, -0.417206f, -0.736328f, 0.532623f, -0.447876f, -0.20285f, -0.870728f, 0.086945f, -0.990417f, 0.107086f, 0.183685f, 0.018341f, -0.982788f, 0.560638f,
	-0.428864f, 0.708282f, 0.296722f, -0.952576f, -0.0672f, 0.135773f, 0.990265f, 0.030243f, -0.068787f, 0.654724f, 0.752686f, 0.762604f, -0.551758f, 0.337585f, -0.819611f, -0.407684f, 0.402466f, -0.727844f, -0.55072f, -0.408539f, -0.855774f, -0.480011f, 0.19281f, 0.693176f, -0.079285f, 0.716339f, 0.226013f, 0.650116f, -0.725433f, 0.246704f, 0.953369f, -0.173553f,
	-0.970398f, -0.239227f, -0.03244f, 0.136383f, -0.394318f, 0.908752f, 0.813232f, 0.558167f, 0.164368f, 0.40451f, 0.549042f, -0.731323f, -0.380249f, -0.566711f, 0.730865f, 0.022156f, 0.932739f, 0.359741f, 0.00824f, 0.996552f, -0.082306f, 0.956635f, -0.065338f, -0.283722f, -0.743561f, 0.008209f, 0.668579f, -0.859589f, -0.509674f, 0.035767f, -0.852234f, 0.363678f,
	-0.375977f, -0.201965f, -0.970795f, -0.12915f, 0.313477f, 0.947327f, 0.06546f, -0.254028f, -0.528259f, 0.81015f, 0.628052f, 0.601105f, 0.49411f, -0.494385f, 0.868378f, 0.037933f, 0.275635f, -0.086426f, 0.957336f, -0.197937f, 0.468903f, -0.860748f, 0.895599f, 0.399384f, 0.195801f, 0.560791f, 0.825012f, -0.069214f, 0.304199f, -0.849487f, 0.43103f, 0.096375f,
	0.93576f, 0.339111f, -0.051422f, 0.408966f, -0.911072f, 0.330444f, 0.942841f, -0.042389f, -0.452362f, -0.786407f, 0.420563f, 0.134308f, -0.933472f, -0.332489f, 0.80191f, -0.566711f, -0.188934f, -0.987946f, -0.105988f, 0.112518f, -0.24408f, 0.892242f, -0.379791f, -0.920502f, 0.229095f, -0.316376f, 0.7789f, 0.325958f, 0.535706f, -0.912872f, 0.185211f, -0.36377f,
	-0.184784f, 0.565369f, -0.803833f, -0.018463f, 0.119537f, 0.992615f, -0.259247f, -0.935608f, 0.239532f, -0.82373f, -0.449127f, -0.345947f, -0.433105f, 0.659515f, 0.614349f, -0.822754f, 0.378845f, -0.423676f, 0.687195f, -0.674835f, -0.26889f, -0.246582f, -0.800842f, 0.545715f, -0.729187f, -0.207794f, 0.651978f, 0.653534f, -0.610443f, -0.447388f, 0.492584f, -0.023346f,
	0.869934f, 0.609039f, 0.009094f, -0.79306f, 0.962494f, -0.271088f, -0.00885f, 0.2659f, -0.004913f, 0.963959f, 0.651245f, 0.553619f, -0.518951f, 0.280548f, -0.84314f, 0.458618f, -0.175293f, -0.983215f, 0.049805f, 0.035339f, -0.979919f, 0.196045f, -0.982941f, 0.164307f, -0.082245f, 0.233734f, -0.97226f, -0.005005f, -0.747253f, -0.611328f, 0.260437f, 0.645599f,
	0.592773f, 0.481384f, 0.117706f, -0.949524f, -0.29068f, -0.535004f, -0.791901f, -0.294312f, -0.627167f, -0.214447f, 0.748718f, -0.047974f, -0.813477f, -0.57959f, -0.175537f, 0.477264f, -0.860992f, 0.738556f, -0.414246f, -0.53183f, 0.562561f, -0.704071f, 0.433289f, -0.754944f, 0.64801f, -0.100586f, 0.114716f, 0.044525f, -0.992371f, 0.966003f, 0.244873f, -0.082764f,
};

} //namespace yafaray
